20220210 - Python - Nested Loops
02 - Equal Sums Even Odd Position - judge: https://judge.softuni.org/Contests/Compete/Index/2422#1


Напишете програма, която чете от конзолата две шестцифрени цели числа.

Винаги първото въведено число ще бъде по-малко от второто.

На конзолата да се отпечатат на 1, ред разделени с интервал, всички числа, които се намират между двете, прочетени от
конзолата числа и отговарят на условието сумата от цифрите на четни и нечетни позиции да са равни.

Ако няма числа, отговарящи на условието на конзолата не се извежда резултат.


____________ Test Data ______________


Input 1:
-------
100000
100050


Output 1:
--------
100001 100012 100023 100034 100045


Comment 1:
---------
Първото число, което генерираме е числото 100000. Сумата от цифрите на четни позиции (жълто) е 0+0+0=0.
Сумата от цифрите на нечетни позиции (зелено) е 0+0+1=1.
Тъй като двете суми са различни числото не се отпечатва.
Следващото, число е 100001.
Сумата на четни позиции е  1+0+0=1, а на нечетни 0+0+1=1.
Двете суми са равни и числото се отпечатва.
Следващото число за проверка е 100002.
То не отговаря на условието и не се отпечатва.
...
При числото 100045 сумата от четните позиции е 5+0+0=5, а на нечетни 4+0+1=5.
Двете суми са равни числото се отпечатва. И т.н.


-------------------------------------


Input 2:
-------
123456
124000


Output 2:
--------
123464 123475 123486 123497 123530 123541 123552 123563 123574 123585 123596 123640 123651 123662 123673 123684 123695 123750 123761 123772 123783 123794 123860 123871 123882 123893 123970 123981 123992


-------------------------------------


Input 3:
-------
299900
300000


Output 3:
--------
299970 299981 299992


-------------------------------------


Input 4:
-------
100115
100120


Output 4:
--------
Няма изход


-------------------------------------


Насоки:
------
    *) Прочетете входните данни от потребителя


    *) За да преминете през всички числа от интервала, направете for цикъл. След като сте прочели входните числа,
       задайте първото число за начална стойност, и итерирайте до достигане на второто число. Вземете числото на
       текущата позиция като текст:

for number in range(firsi_num, second_num + 1):
    number_to_str = str(number)


    *) Създайте си две помощни променливи:
        a) сумата на цифрите на четни позиции
        b) сумата на цифрите на нечетни позиции

        Във for цикъл използвайте функцията enumerate(), която ви дава достъп всеки символ и неговият индекс в думата,
        която обхождате и променете типа на символа от str към int:

for index, digit in enumerate(number_to_str):
    if index % 2 == 0:
        odd_sum += int(digit)
    eles:
        even_sum += int(digit)


    *) След като сте намерили сумата на цифрите на четни и нечетни позиции, проверете дали са равни, ако са,
       принтирайте числото:

for number in range(firsi_num, second_num + 1):
    number_to_str = str(number)
    even_sum = 0
    odd_sum = 0

    for index, digit in enumerate(number_to_str):
        if index % 2 == 0:
            odd_sum += int(digit)
        eles:
            even_sum += int(digit)

     if even_sum == odd_sum:
        print(number, end=' ')
