20220205 - Python - While Loop
02 - Exam Preparation - judge: https://judge.softuni.org/Contests/Compete/Index/2420#1


Напишете програма, в която Марин решава задачи от изпити, докато не получи съобщение "Enough" от лектора си.
При всяка решена задача той получава оценка.
Програмата трябва да приключи прочитането на данни при команда "Enough" или ако Марин получи определения брой незадоволителни оценки.
Незадоволителна е всяка оценка, която е по-малка или равна на 4.


Вход:
----
    *) На първи ред - брой незадоволителни оценки - цяло число;
    *) След това многократно се четат по два реда:
        - Име на задача – текст;
        - Оценка - цяло число в интервала [2 ... 6]


Изход:
-----
    *) Ако Марин стигне до командата "Enough", отпечатайте на 3 реда:
        - "Average score: {средна оценка}"
        - "Number of problems: {броя на всички задачи}"
        - "Last problem: {името на последната задача}"

    *) Ако получи определеният брой незадоволителни оценки:
        - "You need a break, {брой незадоволителни оценки} poor grades."

Средната оценка да бъде форматирана до втория знак след десетичната запетая.


_____________ Test Data ______________


Input 1:
-------
3
Money
6
Story
4
Spring Time
5
Bus
6
Enough


Output 1:
---------
Average score: 5.25
Number of problems: 4
Last problem: Bus


Comment 1:
---------
Броя на позволени незадоволителни оценки е 3.
Първата задача се казва Money, оценката на Марин е 6.
Втората задача е Story, оценката на Марин е 4.
Третата задача е Spring Time, оценката на Марин е 5.
Четвъртата задача е Bus, оценката на Марин е 6.
Следващата команда е Enough, програмата приключва.
Средна оценка: 21 / 4 = 5.25
Брой решени задачи: 4
Последна задача: Bus


--------------------------------------


Input 2:
-------
2
Income
3
Game Info
6
Best Player
4


Output 2:
---------
You need a break, 2 poor grades.


Comment 2:
---------
Броят незадоволителни оценки е 2.
Първата задача е Income, оценката на Марин е 3.
Втората задача е Game Info, оценката на Марин е 6.
Третата задача е Best Player, оценката на Марин е 4.
Марин достигна допустимия брой незадоволителни оценки, време е за почивка.


--------------------------------------


Насоки:
------
    *) Прочетете входните данни от конзолата:

failed_threshold = int(input())


    *) Направете четири помощни променливи в началото:
        - брояч за решените упражнения - с първоначална стойност 0
        - брояч за незадоволителни оценки - с първоначална стойност 0
        - сумата на всички оценки - с първоначална стойност 0
        - коя е последната задача - с първоначална стойност празен текст
        - дали се е провалил или не

failed_times = 0
solved_problems_count = 0
grades_sum = 0
last_problem = ''
has_failed = True


    *) Създайте while цикъл, който продължава докато броя на незадоволителни оценки е по-малък от числото,
       което сте прочели от конзолата. При всяко повторение на цикъла, прочетете името на задачата и оценката за нея.

while failed_times < failed_threshold:
    problem_name = input()
    if problem_name = 'Enough':
        has_failed = False
        break


    *) В случай, че получите команда Enough променете стойността на has_failed на False и прекратете цикъла


    *) При всяко повторение на цикъла, прибавете оценката на Марин към сбора на всичките му оценки и увеличете брояча
       за оценките. Ако оценката е по-ниска или равна на 4 увеличете брояча за незадоволителни оценки. Презапишете
       името на последната задача;

while failed_times < failed_threshold:
    problem_name = input()
    if problem_name = 'Enough':
        has_failed = False
        break

    grade = int(input())
    if grade <= 4:
        failed_times += 1
    grades_sum += grade
    solved_problems_count += 1
    last_problem = problem_name


    *) След цикъла ако броя незадоволителни оценки е достигнал максималните незадоволителни оценки, принтирайте
       нужното съобщение:

if has_failed:
    print(f'You need a break, {failed_threshold} poor grades.')
else:
    print(f'Average score: {grades_sum / solved_problems_count:.2f}')
    print(f'Number of problems: {solved_problems_count}')
    print(f'Last problem: {last_problem}')
